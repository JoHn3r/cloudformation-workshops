AWSTemplateFormatVersion: 2010-09-09
Description: Subnet Stack for Simple Server
Parameters:
  Env:
    Type: String
  VpcId:
    Type: AWS::EC2::VPC::Id
  PublicSubnetCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    Type: String
  PrivateSubnetCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    Type: String
  AZ:
    Type: AWS::EC2::AvailabilityZone::Name
  MainRouteTableId:
    Type: String
Resources:
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VpcId'
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Ref 'AZ'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${AZ}-public'
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VpcId'
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Ref 'AZ'
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${AZ}-private'
  Eip:
    Type: AWS::EC2::EIP
  Ngw:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt 'Eip.AllocationId'
      SubnetId: !Ref 'PublicSubnet'
      Tags:
        - Key: Name
          Value: !Sub '${Env}-ngw'
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VpcId'
      Tags:
        - Key: Name
          Value: !Sub '${Env}-private-route-table'
  PrivateRouteNgw:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref 'PrivateRouteTable'
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref 'Ngw'
  PrivateRouteTableToPrivateSubnetAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet
  MainRouteTableToPublicSubnetAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTableId
      SubnetId: !Ref PublicSubnet
Outputs:
  PublicSubnetId:
    Value: !Ref 'PublicSubnet'
    Export:
      Name: !Sub '${Env}-${AZ}-public-subnet-id'
  PrivateSubnetId:
    Value: !Ref 'PrivateSubnet'
    Export:
      Name: !Sub '${Env}-${AZ}-private-subnet-id'
