---
AWSTemplateFormatVersion: 2010-09-09
Description: An EC2 instance
Parameters:
  Initials:
    Type: String
  InstanceType:
    Type: String
    Default: t2.medium
  IngressCidrSSH1:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
    Default: 0.0.0.0/0
Mappings:
  AWSRegionToAMI: # CentOs Amis List, by regions
    eu-west-1:
      AMIID: ami-3548444c
    # etc.
Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'sbx-${Initials}-test-sg'
      GroupDescription: Security Group for tests
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref 'IngressCidrSSH1'
      Tags:
        - Key: Name
          Value: !Sub 'sbx-${Initials}-test-sg'
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap ['AWSRegionToAMI', !Ref 'AWS::Region', AMIID]
      InstanceType: !Ref 'InstanceType'
      KeyName: !Sub 'sbx-${Initials}-tests'
      SecurityGroupIds:
        - !Sub '${SecurityGroup.GroupId}'
      Tags:
        - Key: Name
          Value: !Sub 'sbx-${Initials}-server'
Outputs:
  BastionPublicIp:
    Value: !Sub '${Instance.PublicIp}'
    Export:
      Name: !Sub 'sbx-${Initials}-server-public-ip'
  BastionPrivateIp:
    Value: !Sub '${Instance.PrivateIp}'
    Export:
      Name: !Sub 'sbx-${Initials}-server-private-ip'
  BastionAZ:
    Value: !Sub '${Instance.AvailabilityZone}'
    Export:
      Name: !Sub 'sbx-${Initials}-server-az'

